{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickLower",
						"type": "int24"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickUpper",
						"type": "int24"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "amount",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickLower",
						"type": "int24"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickUpper",
						"type": "int24"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "amount0",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "amount1",
						"type": "uint128"
					}
				],
				"name": "Collect",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "amount0",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "amount1",
						"type": "uint128"
					}
				],
				"name": "CollectProtocol",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "paid0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "paid1",
						"type": "uint256"
					}
				],
				"name": "Flash",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "observationCardinalityNextOld",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "observationCardinalityNextNew",
						"type": "uint16"
					}
				],
				"name": "IncreaseObservationCardinalityNext",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint160",
						"name": "sqrtPriceX96",
						"type": "uint160"
					},
					{
						"indexed": false,
						"internalType": "int24",
						"name": "tick",
						"type": "int24"
					}
				],
				"name": "Initialize",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickLower",
						"type": "int24"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickUpper",
						"type": "int24"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "amount",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "feeProtocol0Old",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "feeProtocol1Old",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "feeProtocol0New",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "feeProtocol1New",
						"type": "uint32"
					}
				],
				"name": "SetFeeProtocol",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "amount0",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "amount1",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "uint160",
						"name": "sqrtPriceX96",
						"type": "uint160"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "liquidity",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "int24",
						"name": "tick",
						"type": "int24"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "protocolFeesToken0",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "protocolFeesToken1",
						"type": "uint128"
					}
				],
				"name": "Swap",
				"type": "event"
			}
		],
		"devdoc": {
			"events": {
				"Burn(address,int24,int24,uint128,uint256,uint256)": {
					"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
					"params": {
						"amount": "The amount of liquidity to remove",
						"amount0": "The amount of token0 withdrawn",
						"amount1": "The amount of token1 withdrawn",
						"owner": "The owner of the position for which liquidity is removed",
						"tickLower": "The lower tick of the position",
						"tickUpper": "The upper tick of the position"
					}
				},
				"Collect(address,address,int24,int24,uint128,uint128)": {
					"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
					"params": {
						"amount0": "The amount of token0 fees collected",
						"amount1": "The amount of token1 fees collected",
						"owner": "The owner of the position for which fees are collected",
						"tickLower": "The lower tick of the position",
						"tickUpper": "The upper tick of the position"
					}
				},
				"CollectProtocol(address,address,uint128,uint128)": {
					"params": {
						"amount0": "The amount of token1 protocol fees that is withdrawn",
						"recipient": "The address that receives the collected protocol fees",
						"sender": "The address that collects the protocol fees"
					}
				},
				"Flash(address,address,uint256,uint256,uint256,uint256)": {
					"params": {
						"amount0": "The amount of token0 that was flashed",
						"amount1": "The amount of token1 that was flashed",
						"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
						"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
						"recipient": "The address that received the tokens from flash",
						"sender": "The address that initiated the swap call, and that received the callback"
					}
				},
				"IncreaseObservationCardinalityNext(uint16,uint16)": {
					"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
					"params": {
						"observationCardinalityNextNew": "The updated value of the next observation cardinality",
						"observationCardinalityNextOld": "The previous value of the next observation cardinality"
					}
				},
				"Initialize(uint160,int24)": {
					"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
					"params": {
						"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
						"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
					}
				},
				"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
					"params": {
						"amount": "The amount of liquidity minted to the position range",
						"amount0": "How much token0 was required for the minted liquidity",
						"amount1": "How much token1 was required for the minted liquidity",
						"owner": "The owner of the position and recipient of any minted liquidity",
						"sender": "The address that minted the liquidity",
						"tickLower": "The lower tick of the position",
						"tickUpper": "The upper tick of the position"
					}
				},
				"SetFeeProtocol(uint32,uint32,uint32,uint32)": {
					"params": {
						"feeProtocol0New": "The updated value of the token0 protocol fee",
						"feeProtocol0Old": "The previous value of the token0 protocol fee",
						"feeProtocol1New": "The updated value of the token1 protocol fee",
						"feeProtocol1Old": "The previous value of the token1 protocol fee"
					}
				},
				"Swap(address,address,int256,int256,uint160,uint128,int24,uint128,uint128)": {
					"params": {
						"amount0": "The delta of the token0 balance of the pool",
						"amount1": "The delta of the token1 balance of the pool",
						"liquidity": "The liquidity of the pool after the swap",
						"protocolFeesToken0": "The protocol fee of token0 in the swap",
						"protocolFeesToken1": "The protocol fee of token1 in the swap",
						"recipient": "The address that received the output of the swap",
						"sender": "The address that initiated the swap call, and that received the callback",
						"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
						"tick": "The log base 1.0001 of price of the pool after the swap"
					}
				}
			},
			"kind": "dev",
			"methods": {},
			"title": "Events emitted by a pool",
			"version": 1
		},
		"userdoc": {
			"events": {
				"Burn(address,int24,int24,uint128,uint256,uint256)": {
					"notice": "Emitted when a position's liquidity is removed"
				},
				"Collect(address,address,int24,int24,uint128,uint128)": {
					"notice": "Emitted when fees are collected by the owner of a position"
				},
				"CollectProtocol(address,address,uint128,uint128)": {
					"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
				},
				"Flash(address,address,uint256,uint256,uint256,uint256)": {
					"notice": "Emitted by the pool for any flashes of token0/token1"
				},
				"IncreaseObservationCardinalityNext(uint16,uint16)": {
					"notice": "Emitted by the pool for increases to the number of observations that can be stored"
				},
				"Initialize(uint160,int24)": {
					"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
				},
				"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"SetFeeProtocol(uint32,uint32,uint32,uint32)": {
					"notice": "Emitted when the protocol fee is changed by the pool"
				},
				"Swap(address,address,int256,int256,uint160,uint128,int24,uint128,uint128)": {
					"notice": "Emitted by the pool for any swaps between token0 and token1"
				}
			},
			"kind": "user",
			"methods": {},
			"notice": "Contains all events emitted by the pool",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BNBPrice_flattened.sol": "IPancakeV3PoolEvents"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BNBPrice_flattened.sol": {
			"keccak256": "0x40a37b577920ad1de5c2666eb87aad4feee2500c5f13aa4e8db623834017afbb",
			"license": "MIT",
			"urls": [
				"bzz-raw://b425810f55127668b01925c7befdad5ef65c5658345ed16fe1bf09ee8fa72fa5",
				"dweb:/ipfs/QmTK15wEFYEo6io8mPJ2mpyWmVUj3uWowabfS5PDwh1Ug9"
			]
		}
	},
	"version": 1
}